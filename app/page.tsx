"use client";

import Image from "next/image";
import Head from "next/head";
import axios from "axios";
import { useRouter } from "next/navigation";
import { useRef } from "react";
import { useState, useEffect } from "react";
import { set } from "mongoose";

export default function Home() {
  const router = useRouter();

  type Session = {
    _id: string,
    name: string,
    description: string,
    instructions: string, 
    files: {
      fileName: string,
      fileType: string,
      gridFsId: string
    },
    generationList: [string], 
    configMap: string,
    createdAt: Date
    lastUpdated: Date
  };
  const [sessions, setSessions] = useState<Session[]>([]);

  useEffect(() => {
    const fetchSessions = async () => {
      try {
        const res = await axios.get("/api/getSessions");
        if (res.status === 200) {
          setSessions(res.data);
        }
      } catch (error) {
        console.error("Failed to fetch sessions", error);
      }
    };

    fetchSessions();
  }, []);

  const [sortBy, setSortBy] = useState("newest"); // "newest", "oldest", "name"
  const [searchQuery, setSearchQuery] = useState("");

  const handleSignout = async () => {
    try {
      const res = await axios.post("/api/logout");
      if (res.status === 200) {
        router.push("/");
      }
    } catch (error) {
      console.error("Logout failed", error);
    }
  };

  const handleNewSession = async () => {
    try {
      router.push("/newSession");
    } catch (error) {
      console.error("Couldn't Access Page", error);
    }
  };

  const mainRef = useRef<HTMLDivElement>(null);
  const handleExistingSession = async () => {
    mainRef.current?.scrollIntoView({
      behavior: "smooth",
      block: "start",
    });
  }

  return (
    <>
      <Head>
        <title>SmartStudy | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.png" />
      </Head>

      {/* HERO SECTION */}
      <section
        className={`w-full h-screen bg-cover bg-center bg-no-repeat flex items-center justify-center`}
        style={{ backgroundImage: `url('/background.png')` }}
      >
        <div className="text-white text-center max-w-xl px-4">
          <h1 className="text-5xl font-bold mb-6">Welcome to SmartStudy</h1>
          <p className="text-xl mb-8">A smart way to manage your study sessions</p>
          <div className="flex justify-center gap-4 flex-wrap">
            <button
              onClick={handleNewSession}
              className="font-bold px-6 py-3 bg-brand text-white rounded hover:bg-accent transition"
            >
              Create New Study Session
            </button>
            <button
              onClick={handleExistingSession}
              className="font-bold px-6 py-3 bg-black text-white rounded hover:bg-accent transition"
            >
              Existing Study Sessions
            </button>
          </div>
        </div>
      </section>

      {/* MAIN CONTENT */}
      <main 
        id="existing-sessions"
        ref={mainRef}
        className="px-8 sm:px-20 py-20 flex flex-col items-center gap-12 bg-gray-50 pt-[95px] min-h-[calc(100vh-95px)]"
      >
        <h2 className="text-3xl font-semibold">Existing Study Sessions</h2>
        <div className="w-full flex flex-col sm:flex-row items-center justify-start mb-6 gap-4">
          <input
            type="text"
            placeholder="Search by name"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="w-full sm:w-1/2 p-2 border border-gray-300 rounded-md hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-brand transition"
          />

          <select
            value={sortBy}
            onChange={(e) => setSortBy(e.target.value)}
            className="p-2 border border-gray-300 rounded-md hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-brand transition"
          >
            <option value="newest">Newest</option>
            <option value="oldest">Oldest</option>
            <option value="name">Name (A–Z)</option>
          </select>

          <button
            onClick={() => {setSearchQuery("");setSortBy("newest")}}
            className="bg-accent text-white px-4 py-2 rounded hover:bg-gray-500 transition"
          >
            Reset Filters
          </button>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 w-full">
          {[...sessions]
            .filter((session) =>
            session.name.toLowerCase().includes(searchQuery.toLowerCase())
            // || session.description.toLowerCase().includes(searchQuery.toLowerCase())
          )
          .sort((a, b) => {
            if (sortBy === "newest") {
              return new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime();
            } else if (sortBy === "oldest") {
              return new Date(a.lastUpdated).getTime() - new Date(b.lastUpdated).getTime();
            } else if (sortBy === "name") {
              return a.name.localeCompare(b.name);
            }
            return 0;
          })
          .map((session) => (
            <div key={session._id} className="p-6 border rounded-lg shadow hover:shadow-lg transition">
              <div className="flex items-center justify-between">
                <h3 className="text-xl font-semibold mb-2">{session.name}</h3>
                <span className="text-sm text-gray-500">
                  {new Date(session.lastUpdated).toLocaleString()}
                </span>
              </div>
              <p className="text-gray-600 mb-4">{session.description}</p>
              <button
                onClick={() => {router.push(`/sessionView/${session._id}`)}}
                className="bg-brand text-white px-4 py-2 rounded hover:bg-accent transition"
              >
                View Session
              </button>
            </div>
          ))}
        </div>
      </main>

      {/* FOOTER */}
      <footer className="flex gap-6 flex-wrap items-center justify-center py-6 bg-gray-50 text-sm text-gray-600">
        <a
          className="flex items-center gap-2 hover:underline"
          href="https://nextjs.org/learn"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image src="/file.svg" alt="File" width={16} height={16} />
          Learn
        </a>
        <a
          className="flex items-center gap-2 hover:underline"
          href="https://vercel.com/templates?framework=next.js"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image src="/window.svg" alt="Window" width={16} height={16} />
          Examples
        </a>
        <a
          className="flex items-center gap-2 hover:underline"
          href="https://nextjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Image src="/globe.svg" alt="Globe" width={16} height={16} />
          Go to nextjs.org →
        </a>
      </footer>
    </>
  );
}
